//! Pentagon numbers
//!
//! Pentagonal numbers are generated by the formula,
//! Pn=n(3n−1)/2. The first ten pentagonal numbers are:
//!
//! 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//!
//! It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
//! However, their difference, 70 − 22 = 48, is not pentagonal.
//!
//! Find the pair of pentagonal numbers, Pj and Pk,
//! for which their sum and difference are pentagonal
//! and D = |Pk − Pj| is minimised; what is the value of D?
use std::collections::HashMap;

use super::Problem;

crate::base_problem!(5482660, "Pentagon numbers");

fn get_result_problem() -> i64 {
    let mut map_petagon: HashMap<i32, i32> = HashMap::new();

    map_petagon.insert(get_pentagon_number(1), 1);
    let mut max = get_pentagon_number(2);
    let mut last_index: i32 = 2;

    map_petagon.insert(max, 2);

    let mut ipk = 2;

    loop {
        let pk = get_pentagon_number(ipk);

        let mut ipj = 1;
        while ipj < ipk {
            let pj = get_pentagon_number(ipj);
            let sum = pk + pj;
            let sub = pk - pj;

            while max < sum {
                last_index += 1;
                max = get_pentagon_number(last_index);
                map_petagon.insert(max, last_index);
            }

            if map_petagon.contains_key(&sum) && map_petagon.contains_key(&sub) {
                return sub as i64;
            }
            ipj += 1;
        }
        ipk += 1;
    }
}

fn get_pentagon_number(index: i32) -> i32 {
    index * (3 * index - 1) / 2
}
