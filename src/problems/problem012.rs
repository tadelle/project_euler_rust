//! Highly divisible triangular number
//!
//! The sequence of triangle numbers is generated by adding the natural numbers.
//! So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
//! The first ten terms would be:
//!
//! 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//!
//! Let us list the factors of the first seven triangle numbers:
//!
//!  1: 1
//!  3: 1,3
//!  6: 1,2,3,6
//! 10: 1,2,5,10
//! 15: 1,3,5,15
//! 21: 1,3,7,21
//! 28: 1,2,4,7,14,28
//! We can see that 28 is the first triangle number to have over five divisors.
//!
//! What is the value of the first triangle number to have over five hundred divisors?
use super::{get_number_of_divisors, Problem};

crate::base_problem!(76576500, "Highly divisible triangular number");

fn get_result_problem() -> i64 {
    let mut result: i32 = 2;
    let mut divisors = 0;
    let mut triangle_number = 28;
    let mut counter = 8;

    while divisors <= 500 {
        triangle_number += counter;
        let number_of_divisors = get_number_of_divisors(triangle_number);
        if number_of_divisors > divisors {
            result = triangle_number;
            divisors = number_of_divisors;
        }
        counter += 1;
    }

    result as i64
}
